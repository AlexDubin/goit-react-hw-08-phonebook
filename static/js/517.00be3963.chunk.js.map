{"version":3,"file":"static/js/517.00be3963.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/HeroSection/HeroSection.module.css?0007","components/HeroSection/HeroSection.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/UserMenu/UserMenu.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '../Loader/Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnadd\":\"ContactForm_btnadd__++O9X\",\"sh02\":\"ContactForm_sh02__q8D8P\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleChangeNumber = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    const existingContact = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    if (existingContact) {\n      alert(`This ${name} is all ready exists!`);\n    } else {\n      const newContact = {\n        name: name,\n        number: number,\n      };\n\n      dispatch(addContact(newContact));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const isFormIncomplete = name.trim() === '' || number.trim() === '';\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>Name</label>\n      <input\n        type=\"text\"\n        id=\"nameInput\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChangeName}\n        placeholder=\"Name\"\n      />\n      <label htmlFor={numberInputId}>Telephone</label>\n      <input\n        type=\"tel\"\n        id=\"numberInput\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChangeNumber}\n        placeholder=\"Telephone\"\n      />\n      <button className={css.btnadd} type=\"submit\" disabled={isFormIncomplete}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"HeroSection_section__DeIJM\",\"title\":\"HeroSection_title__boVtZ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './HeroSection.module.css';\n\nconst HeroSection = ({ herotitle, children }) => {\n  return (\n    <div className={css.section}>\n      <h1 className={css.title}>{herotitle}</h1>\n      {children}\n    </div>\n  );\n};\n\n\nHeroSection.propTypes = {\n  herotitle: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default HeroSection;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactsList_contact__XcdUu\",\"item\":\"ContactsList_item__6gc1x\",\"btnx\":\"ContactsList_btnx__d072c\",\"sh02\":\"ContactsList_sh02__G3RbF\"};","import React from 'react';\nimport { FaPhone } from 'react-icons/fa';\nimport css from './ContactsList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.item}>\n          <p>\n            <FaPhone /> - {contact.name}: {contact.number}\n          </p>\n          <button\n            className={css.btnx}\n            onClick={() => dispatch(handleDeleteContact(contact.id))}\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterName = event => {\n    const value = event.target.value.toLowerCase();\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"findInput\">Find contacts by name or number</label>\n      <input\n        type=\"text\"\n        id=\"findInput\"\n        placeholder=\"Search contacts\"\n        name=\"filter\"\n        onChange={filterName}\n        required\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={css.section}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport { logoutUser } from 'redux/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '@mui/material';\nimport { selectUserUserData } from 'redux/selectors';\n\nconst UserMenu = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUserUserData);\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <h1>User Information:</h1>\n      <p>\n        <b>User Name:</b> {user.name}\n      </p>\n      <p>\n        <b>User Email:</b> {user.email}\n      </p>\n      <Button variant=\"contained\" sx={{ mt: 2 }} onClick={handleLogout}>\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import React, { useEffect } from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport HeroSection from '../components/HeroSection/HeroSection';\nimport ContactsList from '../components/ContactsList/ContactsList';\nimport Filter from '../components/Filter/Filter';\nimport Loader from '../components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport {\n  selectAuthentificated,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport Section from '../components/Section/Section';\nimport css from '../components/App.module.css';\nimport UserMenu from 'components/UserMenu/UserMenu';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(fetchContacts());\n  }, [dispatch, authentificated]);\n\n  return (\n    <div className={css.phonebook}>\n      <HeroSection herotitle=\"Phonebook\">\n        <ContactForm />\n      </HeroSection>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <ContactsList />\n        <div>\n          <UserMenu></UserMenu>\n        </div>\n      </Section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","nameInputId","nanoid","numberInputId","dispatch","useDispatch","contacts","useSelector","getContacts","useState","name","setName","number","setNumber","reset","isFormIncomplete","trim","onSubmit","evt","preventDefault","find","contact","toLowerCase","alert","newContact","addContact","htmlFor","type","id","pattern","title","required","value","onChange","target","placeholder","disabled","herotitle","children","selectFilteredContacts","map","onClick","contactId","deleteContact","event","filterContacts","navigate","useNavigate","user","selectUserUserData","email","Button","variant","sx","mt","logoutUser","authentificated","selectAuthentificated","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader"],"sourceRoot":""}